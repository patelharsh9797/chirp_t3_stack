// TODO Next.js
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

// TODO utils
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

// TODO Auth
import { SignIn, useUser } from "@clerk/nextjs";
import { SignInButton } from "@clerk/nextjs";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full gap-4 ">
      <Image
        src={user.profileImageUrl}
        alt="user image"
        width={56}
        height={56}
        className="rounded-full"
      />
      <input
        type="text"
        placeholder="Type Some Emojis!!!"
        className="grow bg-transparent"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex items-center gap-4 border-b border-slate-400 p-4">
      <Image
        src={author.profileImageUrl}
        alt={`@${author.username}'s profile picture`}
        width={56}
        height={56}
        className="rounded-full"
      />

      <div className="flex flex-col gap-2">
        <div className="flex gap-1 font-medium text-slate-400">
          <span>{`@${author.username}`}</span>
          <span>Â·</span>
          <span>{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (!data || isLoading) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>Chrip T3 Stack App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!user.isSignedIn && <SignInButton />}
            {user.isSignedIn && <CreatePostWizard />}
            <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
